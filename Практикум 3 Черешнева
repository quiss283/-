{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNxjKn1Sk0ldpXx2slK2qNH"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":[],"metadata":{"id":"vprTwuoQ6z08"}},{"cell_type":"markdown","source":["Практическая работа\n","Раздел: Алгоритмические конструкции задач на Python 3.\n"],"metadata":{"id":"ox7XlxgX68ab"}},{"cell_type":"markdown","source":["1.\tРассчитать доходность акции на основе начальной и конечной цены с обработкой исключения на случай деления на ноль."],"metadata":{"id":"WGoSxMmP7ILg"}},{"cell_type":"code","source":["def calculate_returns(start_prices, end_prices):\n","    returns = []  # Список для хранения доходностей\n","    for i in range(len(start_prices)):\n","        try:\n","            if start_prices[i] == 0:\n","                raise ValueError(f\"Ошибка: начальная цена акции {i + 1} равна нулю.\")\n","            return_rate = ((end_prices[i] - start_prices[i]) / start_prices[i]) * 100  # Доходность\n","            returns.append(return_rate)  # Добавляем доходность в список\n","            print(f\"Доходность акции {i + 1}: {return_rate:.2f}%\")\n","        except ValueError as e:\n","            print(e)  # Обрабатываем исключение (деление на ноль)\n","            returns.append(None)  # Добавляем None для акций с нулевой начальной ценой\n","    return returns\n","\n","# Пример данных: списки начальных и конечных цен\n","start_prices = [100, 50, 0, 200]  # Начальные цены\n","end_prices = [120, 60, 80, 250]    # Конечные цены\n","\n","# Расчет доходности\n","returns = calculate_returns(start_prices, end_prices)\n","\n","# Вывод результата\n","print(\"Список доходностей акций:\", returns)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S6A8rJyHCHkO","executionInfo":{"status":"ok","timestamp":1742029230814,"user_tz":-180,"elapsed":32,"user":{"displayName":"маша черешнева","userId":"05928789091977586491"}},"outputId":"d0b628e8-b087-4142-b8d7-901d82072039"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Доходность акции 1: 20.00%\n","Доходность акции 2: 20.00%\n","Ошибка: начальная цена акции 3 равна нулю.\n","Доходность акции 4: 25.00%\n","Список доходностей акций: [20.0, 20.0, None, 25.0]\n"]}]},{"cell_type":"markdown","source":["2.\tРассчитать среднее значение доходности портфеля с использованием списка доходностей и обработки исключения на случай пустого списка."],"metadata":{"id":"BGzTr0nf8EDh"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hBG3e9hqUdsb","executionInfo":{"status":"ok","timestamp":1742027792361,"user_tz":-180,"elapsed":10,"user":{"displayName":"маша черешнева","userId":"05928789091977586491"}},"outputId":"c39036c6-fb40-4636-e6d6-3035b3135992"},"outputs":[{"output_type":"stream","name":"stdout","text":["Average portfolio return: 7.60%\n"]}],"source":["portfolio_returns = [0.05, 0.08, 0.12, 0.03, 0.10]\n","average_return = sum(portfolio_returns) / len(portfolio_returns)\n","print(f\"Average portfolio return: {average_return:.2%}\")"]},{"cell_type":"markdown","source":["3.\tРассчитать стандартное отклонение доходности портфеля с использованием списка доходностей и обработки исключения на случай пустого списка"],"metadata":{"id":"c1_Qq7Ed8tHY"}},{"cell_type":"code","source":["import math\n","\n","portfolio_returns = [0.05, 0.08, 0.12, 0.03, 0.10]\n","average_return = sum(portfolio_returns) / len(portfolio_returns)\n","squared_deviations = [(r - average_return) ** 2 for r in portfolio_returns]\n","variance = sum(squared_deviations) / (len(portfolio_returns) - 1)\n","standard_deviation = math.sqrt(variance)\n","print(f\"Portfolio standard deviation: {standard_deviation:.2%}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"93hHs0PZVO79","executionInfo":{"status":"ok","timestamp":1679220344546,"user_tz":-180,"elapsed":330,"user":{"displayName":"Vasilii Iavorskiy","userId":"09525287041507659610"}},"outputId":"6477962d-7100-4bc8-d07d-08dc2f77024f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Portfolio standard deviation: 3.65%\n"]}]},{"cell_type":"markdown","source":["4.\tРассчитать среднее значение доходности портфеля с использованием списка доходностей и обработки исключения на случай пустого списка и вывести результат в отсортированном порядке."],"metadata":{"id":"PJR9CDQi9Ta7"}},{"cell_type":"code","source":["portfolio_returns = [0.05, 0.08, 0.12, 0.03, 0.10]\n","portfolio_returns.sort()\n","n = len(portfolio_returns)\n","if n % 2 == 0:\n","    median_return = (portfolio_returns[n//2 - 1] + portfolio_returns[n//2]) / 2\n","else:\n","    median_return = portfolio_returns[n//2]\n","print(f\"Median portfolio return: {median_return:.2%}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T_Newxf8VJFv","executionInfo":{"status":"ok","timestamp":1679220322262,"user_tz":-180,"elapsed":356,"user":{"displayName":"Vasilii Iavorskiy","userId":"09525287041507659610"}},"outputId":"b9ac57a4-8e90-4091-95bf-e8ca7df45f30"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Median portfolio return: 8.00%\n"]}]},{"cell_type":"markdown","source":["5.\tРассчитать доходность портфеля с использованием вложенных списков и цикла while с обработкой исключения на случай деления на ноль."],"metadata":{"id":"gVO2dCfd9fBE"}},{"cell_type":"code","source":["portfolio = [['AAPL', 100, 150], ['GOOG', 200, 300], ['MSFT', 50, 75]]\n","prices = {'AAPL': 200, 'GOOG': 1200, 'MSFT': 150}\n","total_return = 0\n","i = 0\n","while i < len(portfolio):\n","    symbol = portfolio[i][0]\n","    shares = portfolio[i][1]\n","    cost_basis = portfolio[i][2]\n","    current_price = prices[symbol]\n","    current_value = shares * current_price\n","    return_on_asset = (current_value - cost_basis) / cost_basis\n","    total_return += return_on_asset\n","    i += 1\n","print(f\"Total portfolio return: {total_return:.2%}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fTfI4X5ZW2zT","executionInfo":{"status":"ok","timestamp":1742028109740,"user_tz":-180,"elapsed":6,"user":{"displayName":"маша черешнева","userId":"05928789091977586491"}},"outputId":"b7ec424b-d3cd-4ba2-9171-6397718bc960"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total portfolio return: 103033.33%\n"]}]},{"cell_type":"markdown","source":["6.\tРассчитать доходность портфеля с использованием списковых выражений с использованием обработки исключения на случай пустого списка."],"metadata":{"id":"UFfXEr4B95fv"}},{"cell_type":"code","source":["portfolio = [['AAPL', 100, 150], ['GOOG', 200, 300], ['MSFT', 50, 75]]\n","prices = {'AAPL': 200, 'GOOG': 1200, 'MSFT': 150}\n","returns = [(shares * prices[symbol] - cost_basis) / cost_basis for symbol, shares, cost_basis in portfolio]\n","total_return = sum(returns)\n","print(f\"Total portfolio return: {total_return:.2%}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nhGpvoJfW9Wj","executionInfo":{"status":"ok","timestamp":1742028192195,"user_tz":-180,"elapsed":10,"user":{"displayName":"маша черешнева","userId":"05928789091977586491"}},"outputId":"e7bbe1af-24d5-4316-81a6-cbc8db055e7a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total portfolio return: 103033.33%\n"]}]},{"cell_type":"markdown","source":[],"metadata":{"id":"kUiVrKXz9GTr"}},{"cell_type":"markdown","source":["7.\tРассчитать доходность портфеля с использованием вложенных списков и цикла while с обработкой исключения на случай деления на ноль."],"metadata":{"id":"bzd3uA1k-Ni3"}},{"cell_type":"code","source":["portfolio = [['AAPL', 100, 150], ['GOOG', 200, 300], ['MSFT', 50, 75]]\n","prices = {'AAPL': 200, 'GOOG': 1200, 'MSFT': 150}\n","total_return = 0\n","i = 0\n","while i < len(portfolio):\n","    symbol = portfolio[i][0]\n","    shares = portfolio[i][1]\n","    cost_basis = portfolio[i][2]\n","    current_price = prices[symbol]\n","    current_value = shares * current_price\n","    return_on_asset = (current_value - cost_basis) / cost_basis\n","    total_return += return_on_asset\n","    i += 1\n","print(f\"Total portfolio return: {total_return:.2%}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1679220769506,"user_tz":-180,"elapsed":320,"user":{"displayName":"Vasilii Iavorskiy","userId":"09525287041507659610"}},"outputId":"a4531367-e4a6-4126-a49e-462133541573","id":"l3ZeGKdD-jgO"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Total portfolio return: 103033.33%\n"]}]}]}